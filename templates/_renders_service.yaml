{{- define "ph.service.render" -}}

apiVersion: v1
kind: Service

{{ include "ph.meta.render" . }}

{{- $error := printf "A key ports is needed for service %s" .name }}
spec:
  selector: {{ include "ph.service.selector.render" . | nindent 4}}
  type: {{ default "ClusterIP" .type }}
  {{- if hasKey . "loadBalancerSourceRanges" }}
  loadBalancerSourceRanges: {{ .loadBalancerSourceRanges | toYaml | nindent 4 }}
  {{- end }}
  {{- if hasKey . "clusterIP" }}
  clusterIP: {{  .clusterIP }}
  {{- end -}}
  ports:
  {{ range $p := required $error .ports }}
    {{- if hasKey $p "range_service" }}
      {{ range $i := untilStep 0 ($p.range_service|int) 1 }}
  - protocol: {{ default "TCP" $p.protocol }}
    targetPort: {{ $p.pod }}
    port: {{ add $i $p.service}}
        {{- with $p.name }}
    name: {{ . }}
        {{- end }}
      {{ end }}
    {{- else if hasKey $p "range"}}
      {{ range $i := untilStep 0 ($p.range|int) 1 }}
  - protocol: {{ default "TCP" $p.protocol }}
    targetPort: {{add $i $p.pod }}
    port: {{ add $i $p.service}}
        {{- with $p.name }}
    name: {{ . }}
        {{- end }}
      {{ end }}
    {{- else }}
  - protocol: {{ default "TCP" $p.protocol }}
    targetPort: {{ $p.pod }}
    port: {{ $p.service }}
    {{- if hasKey $p "nodePort" }}
    nodePort: {{ $p.nodePort }}
    {{- end }}
    {{- with $p.name }}
    name: {{ . }}
      {{ end }}
   {{- end }}
  {{ end -}} 
{{- end -}}

{{- define "ph.service.selector.render" }}

{{- $error := printf "A selector is needed for service %s" .name -}}

{{ required $error .selector | toYaml }}

{{- end }}

