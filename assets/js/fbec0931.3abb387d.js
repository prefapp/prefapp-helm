"use strict";(self.webpackChunkprefapp_helm=self.webpackChunkprefapp_helm||[]).push([[625],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=r.createContext({}),i=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=i(n),d=l,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,s=new Array(a);s[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:l,s[1]=o;for(var i=2;i<a;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5092:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return i},toc:function(){return c},default:function(){return m}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),s=["components"],o={sidebar_position:2,sidebar_label:"CURL test"},u=void 0,i={unversionedId:"templates/curl_test",id:"templates/curl_test",isDocsHomePage:!1,title:"curl_test",description:"This template is called ph.curl_test.template and it uses ph.test.render underneath.",source:"@site/docs/templates/curl_test.md",sourceDirName:"templates",slug:"/templates/curl_test",permalink:"/docs/templates/curl_test",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/templates/curl_test.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"CURL test"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/templates/templates_intro"}},c=[{value:"Usage",id:"usage",children:[],level:2},{value:"Multiple tests",id:"multiple-tests",children:[],level:2}],p={toc:c};function m(e){var t=e.components,n=(0,l.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This template is called ",(0,a.kt)("inlineCode",{parentName:"p"},"ph.curl_test.template")," and it uses ",(0,a.kt)("inlineCode",{parentName:"p"},"ph.test.render")," underneath."),(0,a.kt)("p",null,"It sets up a helm test that runs a curl to ensure the app is working.\nYou can configure:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The url"),(0,a.kt)("li",{parentName:"ul"},"The http method (GET","[default]",", POST, PUT, DELETE...)"),(0,a.kt)("li",{parentName:"ul"},"Optional headers")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Here is an example of how to use it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\n# file: <chart_name>/templates/tests/curl_info.yaml\n{{- define "base.curl_tests" -}}\nname: {{ .Release.Name}}-{{.Chart.Name }}-test_name\ncurl_options:\n  verb: "POST"\n  headers: \n    - "Content-Type: text/html"\n    - "Server: ACME"\n  url: {{ printf "http://%s-%s%s" .Release.Name  .Chart.Name "/info" }}\n{{- end -}}\n\n{{ include "ph.curl_test.template" ( include "base.curl_tests" . | fromYaml )}}\n\n')),(0,a.kt)("p",null,"It outputs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'# Source: test-curl/templates/tests/curl_info.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name:   name: RELEASE-NAME-test-curl-test_name\n  annotations: \n    helm.sh/hook: test\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n \nspec: \n  containers: \n      - name: test\n        image: "curlimages/curl"\n        imagePullPolicy: IfNotPresent\n  \n        args: \n          - "-X"\n          - "POST"\n          - "-H"\n          - "Content-Type: text/html"\n          - "-H"\n          - "Server: ACME"\n          - "http://RELEASE-NAME-test-curl/info"\n       \n        env: \n        envFrom: \n        ports: \n        volumeMounts:    \n        resources: \n          requests: \n              {}\n          limits: \n              {} \n  restartPolicy: Never\n  imagePullSecrets: \n  volumes:\n\n')),(0,a.kt)("h2",{id:"multiple-tests"},"Multiple tests"),(0,a.kt)("p",null,"If you want to make several curl tests, you could use this template in a loop:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{{- define "test.curl_item.template" -}}\n\n{{ $test := .Values.__render__.test }}\n{{ $test_name := .Values.__render__.test_name }}\n\nname: {{ .Release.Name}}-{{.Chart.Name }}-t-{{ $test_name }}\n\ncurl_options:\n  {{ with $test.headers }}\n  headers: {{ . | toYaml | nindent 4 }}\n  {{ end }}\n  \n  verb: {{ default "GET" $test.verb }}\n\n  url: {{ $test.url }}\n\n{{- end -}}\n\n\n{{- define "test-curl.loop" -}}\n\n{{ range $k, $v := .Values.curl_tests }}\n\n{{ $_ := set $.Values "__render__" (dict) }}\n{{ $_ := set $.Values.__render__ "test" $v }}\n{{ $_ := set $.Values.__render__ "test_name" $k }}\n\n---\n{{ include "ph.curl_test.template" (include "test.curl_item.template" $ | fromYaml ) }}\n\n{{ $_ := unset $.Values "__render__" }}\n\n{{ end }}\n\n{{- end -}}\n\n{{ include "test-curl.loop" . }}\n\n')),(0,a.kt)("p",null,"Here is a values example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'curl_tests:\n  test_texts:\n    url: /texts\n  \n  test_places:\n    headers:\n      - "Content-Type: json"\n    verb: "POST"\n    url: /places\n  \n  test_web:\n    headers:\n      - "Content-Type: text/html"\n    verb: "PUT"\n    url: /\n')))}m.isMDXComponent=!0}}]);