"use strict";(self.webpackChunkprefapp_helm=self.webpackChunkprefapp_helm||[]).push([[243],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return m}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=t.createContext({}),s=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return r?t.createElement(f,l(l({ref:n},c),{},{components:r})):t.createElement(f,l({ref:n},c))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3096:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var t=r(7462),o=r(3366),a=(r(7294),r(3905)),l=["components"],i={sidebar_position:2},p=void 0,s={unversionedId:"renders/deployment",id:"renders/deployment",isDocsHomePage:!1,title:"deployment",description:"Basic structure",source:"@site/docs/renders/deployment.md",sourceDirName:"renders",slug:"/renders/deployment",permalink:"/docs/renders/deployment",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/renders/deployment.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/renders/renders_intro"},next:{title:"env helpers",permalink:"/docs/renders/env_helpers"}},c=[{value:"Basic structure",id:"basic-structure",children:[{value:"ports",id:"ports",children:[],level:3},{value:"env",id:"env",children:[],level:3}],level:2},{value:"Example of ph.deployment.render",id:"example-of-phdeploymentrender",children:[],level:2}],d={toc:c};function u(e){var n=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"basic-structure"},"Basic structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"name: <name_of_the_deployment>\nselector:  <selectors>\nannotations: <anotations>\nreplicas: <n_replicas>\ncontainers:\n  - name: <name_of_the_container>\n    image: ...\n    command:  ...\n    ...\n    ports: ...\n")),(0,a.kt)("p",null,"Prefapp-helm-render uses the same nomenclature as the standard k8s artifact, with the following exceptions:"),(0,a.kt)("h3",{id:"ports"},"ports"),(0,a.kt)("p",null,"Instead of:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ports:\n  - containerPort: 80\n")),(0,a.kt)("p",null,"The render expects:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ports:\n  - pod: 80\n")),(0,a.kt)("p",null,"This decision will be explained in detail in the ",(0,a.kt)("a",{parentName:"p",href:"./service"},"Render-service")," documentation."),(0,a.kt)("h3",{id:"env"},"env"),(0,a.kt)("p",null,"The render expects the environment values to be added in several ways ",(0,a.kt)("a",{parentName:"p",href:"./env_helpers"},"Env-helpers")),(0,a.kt)("h2",{id:"example-of-phdeploymentrender"},"Example of ph.deployment.render"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'# deploy.yaml\n{{ define "frontend.deploy.data"  }}\nname: despregue-{{ .Release.Name }}-php\nselector: {{ .Values.selector_meiga | toYaml | nindent 2}}\nreplicas: 1\n\ncontainers:\n- name: app-php\n  image: {{ .Values.imagenes.frontend }}\n  env_values_secret:\n  - secret: {{ .Release.Name }}-secrets\n    values:\n      MYSQL_PASSWORD: root-password\n  envFrom:\n    configmaps:\n    - {{ .Release.Name }}-config\n  command: ["php", "-S", "0.0.0.0:80"]\n  ports: {{ .Values.ports | toYaml | nindent 6 }}\n\n{{- end }}\n{{ include "ph.deployment.render" (include "frontend.deploy.data" . | fromYaml )  }}\n')))}u.isMDXComponent=!0}}]);