"use strict";(self.webpackChunkprefapp_helm=self.webpackChunkprefapp_helm||[]).push([[817],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return f}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),p=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(r),f=a,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||o;return r?t.createElement(d,i(i({ref:n},s),{},{components:r})):t.createElement(d,i({ref:n},s))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2393:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var t=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],c={sidebar_position:5},l=void 0,p={unversionedId:"renders/configmap",id:"renders/configmap",isDocsHomePage:!1,title:"configmap",description:"WIP",source:"@site/docs/renders/configmap.md",sourceDirName:"renders",slug:"/renders/configmap",permalink:"/docs/renders/configmap",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/renders/configmap.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"service",permalink:"/docs/renders/service"},next:{title:"secret",permalink:"/docs/renders/secret"}},s=[{value:"WIP",id:"wip",children:[],level:2},{value:"Basic structure",id:"basic-structure",children:[],level:2},{value:"Configmap example",id:"configmap-example",children:[],level:2}],u={toc:s};function m(e){var n=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"wip"},"WIP"),(0,o.kt)("p",null,"Work in progress"),(0,o.kt)("h2",{id:"basic-structure"},"Basic structure"),(0,o.kt)("p",null,"To render our Kubernetes configmaps, Prefapp-helm uses ph.configmap.render , which expects the following object structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: <configmap_name>\nlabels: <label_maps>\n\ndata:\n  VAR_NAME1: value1\n  VAR_NAME2: value2\n")),(0,o.kt)("h2",{id:"configmap-example"},"Configmap example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'{{ define "configmap.data"  }}\nname: {{ .Release.Name }}-config \nlabels:\n    tipo: "configurations"  \ndata:\n  MYSQL_HOST: {{ .Release.Name }}-mysql\n  MYSQL_USER: {{ .Values.datamysql.user }}\n  MYSQL_DATABASE: {{ .Values.datamysql.database }}\n  {{ .Values.env | toYaml | nindent 2}} #data taken directly from Values\n\n{{- end }}\n{{ include "ph.configmap.render" (include "configmap.data" . | fromYaml )  }}\n')))}m.isMDXComponent=!0}}]);